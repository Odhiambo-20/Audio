{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Audio } from 'expo-av';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    recording = _React$useState2[0],\n    setRecording = _React$useState2[1];\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    recordings = _React$useState4[0],\n    setRecordings = _React$useState4[1];\n  function startRecording() {\n    return _startRecording.apply(this, arguments);\n  }\n  function _startRecording() {\n    _startRecording = _asyncToGenerator(function* () {\n      try {\n        var perm = yield Audio.requestPermissionsAsync();\n        if (perm.status === \"granted\") {\n          yield Audio.setAudioModeAsync({\n            allowsRecordingIOS: true,\n            playsInSilentModeIOS: true\n          });\n          var _yield$Audio$Recordin = yield Audio.Recording.createAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY),\n            _recording = _yield$Audio$Recordin.recording;\n          setRecording(_recording);\n        }\n      } catch (err) {}\n    });\n    return _startRecording.apply(this, arguments);\n  }\n  function stopRecording() {\n    return _stopRecording.apply(this, arguments);\n  }\n  function _stopRecording() {\n    _stopRecording = _asyncToGenerator(function* () {\n      setRecording(undefined);\n      yield recording.stopAndUnloadAsync();\n      var allRecordings = _toConsumableArray(recordings);\n      var _yield$recording$crea = yield recording.createNewLoadedSoundAsync(),\n        sound = _yield$recording$crea.sound,\n        status = _yield$recording$crea.status;\n      allRecordings.push({\n        sound: sound,\n        duration: getDurationFormatted(status.durationMillis),\n        file: recording.getURI()\n      });\n      setRecordings(allRecordings);\n    });\n    return _stopRecording.apply(this, arguments);\n  }\n  function getDurationFormatted(milliseconds) {\n    var minutes = milliseconds / 1000 / 60;\n    var seconds = Math.round((minutes - Math.floor(minutes)) * 60);\n    return seconds < 10 ? `${Math.floor(minutes)}:0${seconds}` : `${Math.floor(minutes)}:${seconds}`;\n  }\n  function getRecordingLines() {\n    return recordings.map(function (recordingLine, index) {\n      return _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(Text, {\n          style: styles.fill,\n          children: [\"Recording #\", index + 1, \" | \", recordingLine.duration]\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return recordingLine.sound.replayAsync();\n          },\n          title: \"Play\"\n        })]\n      }, index);\n    });\n  }\n  function clearRecordings() {\n    setRecordings([]);\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: recording ? 'Stop Recording' : 'Start Recording\\n\\n\\n',\n      onPress: recording ? stopRecording : startRecording\n    }), getRecordingLines(), _jsx(Button, {\n      title: recordings.length > 0 ? '\\n\\n\\nClear Recordings' : '',\n      onPress: clearRecordings\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 10,\n    marginRight: 40\n  },\n  fill: {\n    flex: 1,\n    margin: 15\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","View","Button","Audio","jsxs","_jsxs","jsx","_jsx","App","_React$useState","useState","_React$useState2","_slicedToArray","recording","setRecording","_React$useState3","_React$useState4","recordings","setRecordings","startRecording","_startRecording","apply","arguments","_asyncToGenerator","perm","requestPermissionsAsync","status","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","_yield$Audio$Recordin","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","err","stopRecording","_stopRecording","undefined","stopAndUnloadAsync","allRecordings","_toConsumableArray","_yield$recording$crea","createNewLoadedSoundAsync","sound","push","duration","getDurationFormatted","durationMillis","file","getURI","milliseconds","minutes","seconds","Math","round","floor","getRecordingLines","map","recordingLine","index","style","styles","row","children","fill","onPress","replayAsync","title","clearRecordings","container","length","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","marginLeft","marginRight","margin"],"sources":["C:/Users/Administrator/Desktop/Audio/Expo-Record-Audio/App.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Button } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\n\r\nexport default function App() {\r\n  const [recording, setRecording] = React.useState();\r\n  const [recordings, setRecordings] = React.useState([]);\r\n\r\n  async function startRecording() {\r\n    try {\r\n      const perm = await Audio.requestPermissionsAsync();\r\n      if (perm.status === \"granted\") {\r\n        await Audio.setAudioModeAsync({\r\n          allowsRecordingIOS: true,\r\n          playsInSilentModeIOS: true\r\n        });\r\n        const { recording } = await Audio.Recording.createAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY);\r\n        setRecording(recording);\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  async function stopRecording() {\r\n    setRecording(undefined);\r\n\r\n    await recording.stopAndUnloadAsync();\r\n    let allRecordings = [...recordings];\r\n    const { sound, status } = await recording.createNewLoadedSoundAsync();\r\n    allRecordings.push({\r\n      sound: sound,\r\n      duration: getDurationFormatted(status.durationMillis),\r\n      file: recording.getURI()\r\n    });\r\n\r\n    setRecordings(allRecordings);\r\n  }\r\n\r\n  function getDurationFormatted(milliseconds) {\r\n    const minutes = milliseconds / 1000 / 60;\r\n    const seconds = Math.round((minutes - Math.floor(minutes)) * 60);\r\n    return seconds < 10 ? `${Math.floor(minutes)}:0${seconds}` : `${Math.floor(minutes)}:${seconds}`\r\n  }\r\n\r\n  function getRecordingLines() {\r\n    return recordings.map((recordingLine, index) => {\r\n      return (\r\n        <View key={index} style={styles.row}>\r\n          <Text style={styles.fill}>\r\n            Recording #{index + 1} | {recordingLine.duration}\r\n          </Text>\r\n          <Button onPress={() => recordingLine.sound.replayAsync()} title=\"Play\"></Button>\r\n        </View>\r\n      );\r\n    });\r\n  }\r\n\r\n  function clearRecordings() {\r\n    setRecordings([])\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button title={recording ? 'Stop Recording' : 'Start Recording\\n\\n\\n'} onPress={recording ? stopRecording : startRecording} />\r\n      {getRecordingLines()}\r\n      <Button title={recordings.length > 0 ? '\\n\\n\\nClear Recordings' : ''} onPress={clearRecordings} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginLeft: 10,\r\n    marginRight: 40\r\n  },\r\n  fill: {\r\n    flex: 1,\r\n    margin: 15\r\n  }\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}