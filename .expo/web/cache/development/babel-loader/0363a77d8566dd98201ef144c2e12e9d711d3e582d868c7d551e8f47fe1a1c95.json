{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Audio } from 'expo-av';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    recording = _useState2[0],\n    setRecording = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    sound = _useState4[0],\n    setSound = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    audioUri = _useState6[0],\n    setAudioUri = _useState6[1];\n  var startRecording = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        console.log('Requesting permissions...');\n        yield Audio.requestPermissionsAsync();\n        yield Audio.setAudioModeAsync({\n          allowsRecordingIOS: true,\n          playsInSilentModeIOS: true\n        });\n        console.log('Starting recording...');\n        var _yield$Audio$Recordin = yield Audio.Recording.createAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY),\n          _recording = _yield$Audio$Recordin.recording;\n        setRecording(_recording);\n        console.log('Recording started');\n      } catch (err) {\n        console.error('Failed to start recording', err);\n      }\n    });\n    return function startRecording() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var stopRecording = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      console.log('Stopping recording...');\n      setRecording(null);\n      yield recording.stopAndUnloadAsync();\n      var uri = recording.getURI();\n      setAudioUri(uri);\n      console.log('Recording stopped and stored at', uri);\n    });\n    return function stopRecording() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var playRecording = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (audioUri) {\n        console.log('Loading sound');\n        var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync({\n            uri: audioUri\n          }),\n          _sound = _yield$Audio$Sound$cr.sound;\n        setSound(_sound);\n        console.log('Playing sound');\n        yield _sound.playAsync();\n      }\n    });\n    return function playRecording() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var pausePlayback = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (sound) {\n        console.log('Pausing sound');\n        yield sound.pauseAsync();\n      }\n    });\n    return function pausePlayback() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var stopPlayback = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      if (sound) {\n        console.log('Stopping sound');\n        yield sound.stopAsync();\n        yield sound.unloadAsync();\n        setSound(null);\n      }\n    });\n    return function stopPlayback() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var restartPlayback = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      if (sound) {\n        console.log('Restarting sound');\n        yield sound.replayAsync();\n      } else {\n        playRecording();\n      }\n    });\n    return function restartPlayback() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Lab 6 - Audio App\"\n    }), !audioUri ? _jsxs(_Fragment, {\n      children: [_jsx(Button, {\n        title: \"Record\",\n        onPress: startRecording,\n        disabled: recording !== null\n      }), _jsx(Button, {\n        title: \"Stop Recording\",\n        onPress: stopRecording,\n        disabled: !recording\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: styles.statusText,\n        children: \"Recording Stopped!\"\n      }), _jsx(Button, {\n        title: \"Play\",\n        onPress: playRecording\n      }), _jsx(Button, {\n        title: \"Pause\",\n        onPress: pausePlayback\n      }), _jsx(Button, {\n        title: \"Stop\",\n        onPress: stopPlayback\n      }), _jsx(Button, {\n        title: \"Restart\",\n        onPress: restartPlayback\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  statusText: {\n    fontSize: 18,\n    color: 'red',\n    marginVertical: 10\n  }\n});","map":{"version":3,"names":["React","useState","Button","View","Text","StyleSheet","Audio","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","recording","setRecording","_useState3","_useState4","sound","setSound","_useState5","_useState6","audioUri","setAudioUri","startRecording","_ref","_asyncToGenerator","console","log","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","_yield$Audio$Recordin","Recording","createAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","err","error","apply","arguments","stopRecording","_ref2","stopAndUnloadAsync","uri","getURI","playRecording","_ref3","_yield$Audio$Sound$cr","Sound","playAsync","pausePlayback","_ref4","pauseAsync","stopPlayback","_ref5","stopAsync","unloadAsync","restartPlayback","_ref6","replayAsync","style","styles","container","children","title","onPress","disabled","statusText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","color","marginVertical"],"sources":["C:/Users/Administrator/Desktop/Audio/Expo-Record-Audio/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, View, Text, StyleSheet } from 'react-native';\r\nimport { Audio } from 'expo-av';\r\n\r\nexport default function App() {\r\n  const [recording, setRecording] = useState(null);\r\n  const [sound, setSound] = useState(null);\r\n  const [audioUri, setAudioUri] = useState(null);\r\n\r\n  // Function to start recording\r\n  const startRecording = async () => {\r\n    try {\r\n      console.log('Requesting permissions...');\r\n      await Audio.requestPermissionsAsync();\r\n      await Audio.setAudioModeAsync({\r\n        allowsRecordingIOS: true,\r\n        playsInSilentModeIOS: true,\r\n      }); \r\n      console.log('Starting recording...');\r\n      const { recording } = await Audio.Recording.createAsync(\r\n        Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\r\n      );\r\n      setRecording(recording);\r\n      console.log('Recording started');\r\n    } catch (err) {\r\n      console.error('Failed to start recording', err);\r\n    }\r\n  };\r\n\r\n  // Function to stop recording\r\n  const stopRecording = async () => {\r\n    console.log('Stopping recording...');\r\n    setRecording(null);\r\n    await recording.stopAndUnloadAsync();\r\n    const uri = recording.getURI();\r\n    setAudioUri(uri);\r\n    console.log('Recording stopped and stored at', uri);\r\n  };\r\n\r\n  // Function to play the recording\r\n  const playRecording = async () => {\r\n    if (audioUri) {\r\n      console.log('Loading sound');\r\n      const { sound } = await Audio.Sound.createAsync({ uri: audioUri });\r\n      setSound(sound);\r\n      console.log('Playing sound');\r\n      await sound.playAsync();\r\n    }\r\n  };\r\n\r\n  // Function to pause playback\r\n  const pausePlayback = async () => {\r\n    if (sound) {\r\n      console.log('Pausing sound');\r\n      await sound.pauseAsync();\r\n    }\r\n  };\r\n\r\n  // Function to stop playback\r\n  const stopPlayback = async () => {\r\n    if (sound) {\r\n      console.log('Stopping sound');\r\n      await sound.stopAsync();\r\n      await sound.unloadAsync();\r\n      setSound(null);\r\n    }\r\n  };\r\n\r\n  // Function to restart playback from the beginning\r\n  const restartPlayback = async () => {\r\n    if (sound) {\r\n      console.log('Restarting sound');\r\n      await sound.replayAsync();\r\n    } else {\r\n      playRecording();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Lab 6 - Audio App</Text>\r\n\r\n      {!audioUri ? (\r\n        // Display Record and Stop buttons if there is no recording yet\r\n        <>\r\n          <Button title=\"Record\" onPress={startRecording} disabled={recording !== null} />\r\n          <Button title=\"Stop Recording\" onPress={stopRecording} disabled={!recording} />\r\n        </>\r\n      ) : (\r\n        // Display Playback controls once there is a recording\r\n        <>\r\n          <Text style={styles.statusText}>Recording Stopped!</Text>\r\n          <Button title=\"Play\" onPress={playRecording} />\r\n          <Button title=\"Pause\" onPress={pausePlayback} />\r\n          <Button title=\"Stop\" onPress={stopPlayback} />\r\n          <Button title=\"Restart\" onPress={restartPlayback} />\r\n        </>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  statusText: {\r\n    fontSize: 18,\r\n    color: 'red',\r\n    marginVertical: 10,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}